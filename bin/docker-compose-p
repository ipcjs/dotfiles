#!/bin/bash
set -e

function find_project_dir() {
    local name=$1
    for dir in "$name" "docker-$name" "docker-service-$name"; do
        if [ -d "$dir" ]; then
            for file in "$dir/compose.yaml" "$dir/compose.yml" "$dir/docker-compose.yaml" "$dir/docker-compose.yml"; do
                if [ -f "$file" ]; then
                    realpath "$dir"
                    return
                fi
            done
        fi
    done
}

function find_envs () {
    local env_args=()
    if [ -f ".env" ]; then
        env_args+=("--env-file=$(realpath .env)")
    fi
    if [ -f ".env.local" ]; then
        env_args+=("--env-file=$(realpath .env.local)")
    fi
    echo "${env_args[@]}"
}

function print_help() {
    echo "Execute the docker-compose command in the subdirectory and automatically add the .env and .env.local file in the current directory and the subdirectory."
    echo
    echo "Usage: $(basename "$0") [project_name] [docker-compose options...]"
    echo "       $(basename "$0") --all [docker-compose options...]"
    echo "       $(basename "$0") --clear"
    echo "       $(basename "$0") --help"
    echo
    echo "Options:"
    echo "  --all: Execute the docker-compose command in all subdirectories."
    echo "  --clear: Clear all docker-compose projects."
}

if [[ "$1" == "--help" ]]; then
    print_help
    exit 0
elif [[ "$1" == "--clear" ]]; then
    docker compose ls -a | awk 'NR>1 {print $1}' | xargs -I {} docker compose -p {} down
    exit 0
elif [[ "$1" == "--all" ]]; then
    project_names=(*)
    shift
else
    project_names=("$1")
    shift
fi

cur_dir="$(pwd)"
root_envs=($(find_envs))
for project_name in "${project_names[@]}"; do
    cd "$cur_dir"
    project_dir="$(find_project_dir "$project_name")"
    if [ -z "$project_dir" ]; then
        continue
    fi

    envs=("${root_envs[@]}")
    if [[ "$cur_dir" != "$project_dir" ]]; then
        cd "$project_dir"
        envs+=($(find_envs))
    fi

    docker compose "${envs[@]}" "$@"
done
