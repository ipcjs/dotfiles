#!/bin/bash
set -e

function find_compose_file() {
    local name=$1
    if [ -f "$name/compose.yaml" ]; then
        echo "$name/compose.yaml"
    elif [ -f "$name/docker-compose.yaml" ]; then
        echo "$name/docker-compose.yaml"
    elif [ -f "$name/docker-compose.yml" ]; then
        echo "$name/docker-compose.yml"
    elif [ -f "docker-$name/docker-compose.yml" ]; then
        echo "docker-$name/docker-compose.yml"
    elif [ -f "docker-service-$name/docker-compose.yml" ]; then
        echo "docker-service-$name/docker-compose.yml"
    fi
}

function find_envs () {
    local env_args=()
    if [ -f ".env" ]; then
        env_args+=("--env-file=.env")
    fi
    if [ -f ".env.local" ]; then
        env_args+=("--env-file=.env.local")
    fi
    echo "${env_args[@]}"
}

function print_help() {
    echo "Execute the docker-compose command in the subdirectory and automatically add the .env file in the current directory"
    echo
    echo "Usage: $(basename $0) [project_name] [docker-compose options...]"
    echo "       $(basename $0) --all [docker-compose options...]"
    echo "       $(basename $0) --help"
}

allow_use_project_name=
if [[ "$1" == "--help" ]]; then
    print_help
    exit 0
elif [[ "$1" == "--all" ]]; then
    project_names=(*)
    shift
else
    project_names=("$1")
    shift
    allow_use_project_name=Y
fi

for project_name in "${project_names[@]}"; do
    compose_file="$(find_compose_file $project_name)"
    if [ -n "$compose_file" ]; then
        project_args=(-f "$compose_file")
    elif [ -n "$allow_use_project_name" ]; then
        project_args=(-p "$project_name")
    else
        continue
    fi

    docker compose $(find_envs) "${project_args[@]}" "$@"
done
